function one(){
    console.log("one")
    two()
}

function two(){
    console.log("two")
    three()
}

function three(){
    console.log("three")
}

one()
two()
three()

/*
ðŸ§¾ Execution Step-by-Step with Call Stack
ðŸ”¹ First Call: one()
one() is pushed onto the stack.
â†’ Stack: [one]
â†’ Output: one

Inside one(), it calls two()
â†’ two() is pushed
â†’ Stack: [one, two]
â†’ Output: two

Inside two(), it calls three()
â†’ three() is pushed
â†’ Stack: [one, two, three]
â†’ Output: three

three() finishes â†’ popped
â†’ Stack: [one, two]

two() finishes â†’ popped
â†’ Stack: [one]

one() finishes â†’ popped
â†’ Stack: []

ðŸ”¹ Second Call: two()
two() is pushed
â†’ Output: two

three() is called â†’ pushed
â†’ Output: three

three() finishes â†’ popped

two() finishes â†’ popped

ðŸ”¹ Third Call: three()
three() is pushed
â†’ Output: three

three() finishes â†’ popped
*/
